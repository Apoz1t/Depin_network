import requests
import threading
import time
from utils import sha256, valid_hash

COORDINATOR = "http://<your_public_ip>:8000"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π IP –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞
NODE_NAME = "node-friend"
HEARTBEAT_INTERVAL = 10

def heartbeat():
    while True:
        try:
            requests.post(f"{COORDINATOR}/heartbeat", params={"node_name": NODE_NAME})
        except:
            pass
        time.sleep(HEARTBEAT_INTERVAL)

def run_node():
    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–¥—ã
    requests.post(f"{COORDINATOR}/register_node", params={"node_name": NODE_NAME})
    print(f"üöÄ Node {NODE_NAME} registered and started.")

    # –∑–∞–ø—É—Å–∫ heartbeat –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=heartbeat, daemon=True).start()

    # –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–æ–∏—Å–∫–∞ PoW
    while True:
        try:
            task = requests.get(f"{COORDINATOR}/task").json()
            task_id, data, difficulty = task["task_id"], task["data"], task["difficulty"]
            print(f"üîó –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ: {data}, —Å–ª–æ–∂–Ω–æ—Å—Ç—å {difficulty}")

            nonce = 0
            while True:
                h = sha256(f"{data}{nonce}")
                if valid_hash(h, difficulty):
                    print(f"‚ú® –†–µ—à–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: nonce={nonce}, hash={h[:20]}...")
                    requests.post(f"{COORDINATOR}/submit",
                                  params={"task_id": task_id, "nonce": nonce, "h": h, "node_name": NODE_NAME})
                    break
                nonce += 1
        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞ –Ω–æ–¥—ã: {e}")
            time.sleep(3)

if __name__ == "__main__":
    run_node()
